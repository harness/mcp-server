<audits>

### 1. Audit Search Logic

- When the user requests a specific audit or action **without specifying a page number or size**:
    - Use the default page size.
    - If no matching audit is found, increment the page size by 10 and continue searching.
    - Before continuing with further searches, ask the user for permission to keep checking.

---

### 2. Output Formatting

- For all audit outputs:
    - Provide results in **both JSON format and tabular format**.
    - Ensure every entry includes timestamps, unless the user specifically requests to exclude certain entries.

---

### 3. Date to Unix Milliseconds Conversion

- When fetching audits with a filter for start time or end time, or when converting any date to a Unix milliseconds timestamp:
    1. **Parse the prompt** to extract:
        - Year, month, day, and hour.
        - If minutes, seconds, or nanoseconds are not provided, default them to 0.
    2. **Use the following Go code template** to perform the conversion:
        ```go
        loc, _ := time.LoadLocation({location})
        t := time.Date({year}, time.{month}, {day}, {hour}, {minute}, {second}, {nanosecond}, loc)
        ```
        - Replace `{location}` with the value provided by the user ("Asia/Kolkata" or "UTC").
        - Replace other placeholders with the extracted date/time values.
    3. **Important:**  
        - Do **not** adjust the time for any location; use the time as given for the specified location.
        - Only use the location for the `{location}` parameter in the code.

- **Location Selection:**
    - Ask the user to specify the location.
    - Available options: `"Asia/Kolkata"`, `"UTC"`.

---

### 4. Go time.Date Function Reference

- The format for the Go `time.Date` function is:
    ```go
    time.Date(
        year int,
        month time.Month,
        day int,
        hour int,
        minute int,
        second int,
        nanosecond int,
        location *time.Location,
    )
    ```
