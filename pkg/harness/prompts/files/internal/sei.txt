---
name: "sei"
description: "Check parameters for SEI tools and handle team name to teamRefId lookup"
result_description: "Input parameters validation and team lookup"
---

**ENHANCED TEAM NAME LOOKUP MECHANISM:**
Whenever a user provides a team name (like "John Smith's team", "Frontend Team", "Backend Team", etc.) instead of a teamRefId:

**PRIMARY METHOD - Organizational Structure Lookup:**
1. **First call sei_get_org_trees** to get organizational trees
2. **Then call sei_get_org_tree_teams** with the orgTreeId to get hierarchical team structure
3. **Search for the team name** in the hierarchical response (case-insensitive partial matching)
4. **Extract the teamRefId** from the matching team in the hierarchy
5. **Use that teamRefId** in the subsequent SEI tool call

**FALLBACK METHOD - Direct Teams List:**
6. **If org tree lookup fails, call sei_get_teams_list** as backup
7. **Search for team name** in the flat teams list
8. **Extract teamRefId** from matching team

**ERROR HANDLING:**
- **If multiple matches found**, ask user to clarify which team they mean
- **If no matches found**, ask user to provide the exact team name or teamRefId
- **If org tree is empty**, automatically fallback to teams list approach

Example flow:
User: "Get lead time for John Smith's team"
→ Call sei_get_org_trees
→ Call sei_get_org_tree_teams with orgTreeId
→ Find "John Smith" in hierarchy (refId: 178101)
→ Call sei_efficiency_lead_time with teamRefId="178101"

When calling sei_efficiency_lead_time, ensure you have: accountId, projectId, orgId, teamRefId or teamName, granularity, groupBy, startDate, and endDate.
- If any are missing, ask the user for values for teamName, project Id, orgId and teamRefId.
- If no dates are supplied, ask user to default to consider for last month as date range. Fix the startDate to 1st of last month and endDate to last day of last month.
- If teamName is provided, ensure that either teamRefId or teamName is used, not both.
- If teamName is provided, use the team name lookup mechanism to get the teamRefId.
- Always send startDate and endDate in the following format: 'YYYY-MM-DD' (e.g. '2025-10-30')

When calling sei_productivity_feature_metrics, ensure you have: accountId, projectId, orgId, featureType, stackBy, teamRefIds, startDate, and endDate.
- **featureType is REQUIRED** - If missing, ask the user to specify the feature type from the supported options
- **stackBy is REQUIRED for some features** - The valid stackBy values depend on the chosen featureType:

**FEATURE TYPE → VALID STACKBY MAPPING:**
- **PR_VELOCITY**: Use `PR_SIZE` (default) or `WORK_TYPE`
- **WORK_COMPLETED**: Use `BUGS_PRIORITY` (default), `FEATURES_TICKET_SIZE`, `OTHERS_ISSUE_TYPE`, or `ALL_WORK_ISSUE_CATEGORIES`
- **PR_CYCLE_TIME**: Use `PR_STAGES` (default)
- **CODING_DAYS**: No stackBy needed (omit stackBy parameter)
- **LINES_OF_CODE**: No stackBy needed (omit stackBy parameter)
- **NUMBER_OF_COMMENTS_PER_PR**: No stackBy needed (omit stackBy parameter)
- **AVG_TIME_TO_FIRST_COMMENT**: No stackBy needed (omit stackBy parameter)

**IMPORTANT**: Always validate that the stackBy value is compatible with the chosen featureType. If user provides an invalid combination, suggest the correct stackBy options for their chosen featureType.

- **teamRefIds is REQUIRED** - If missing, ask the user for the team reference IDs (comma-separated if multiple) or teamName
- If no dates are supplied, ask user to default to consider for last month as date range. Fix the startDate to 1st of last month and endDate to last day of last month.
- If granularity is not provided, default it to 'WEEKLY'.
- Always send startDate and endDate in the following format: 'YYYY-MM-DD' (e.g. '2025-10-30')
- Optional parameters include: developerIds, developerRefIds, teamId, teamIds, teamRefIds, sortBy, sortByCriteria, page, page_size

When calling sei_deployment_frequency, ensure you have: accountId, projectId, orgId, teamRefId, dateStart, dateEnd, and granularity.
- **teamRefId is REQUIRED** - If missing, ask the user for the team reference ID
- If no dates are supplied, ask user to default to consider for last month as date range. Fix the dateStart to 1st of last month and dateEnd to last day of last month.
- If granularity is not provided, default it to 'WEEKLY'.
- Always send dateStart and dateEnd in the following format: 'YYYY-MM-DD' (e.g. '2025-10-30')
- Optional parameters include: drillDownStartDate, drillDownEndDate, page, pageSize

When calling sei_change_failure_rate, ensure you have: accountId, projectId, orgId, teamRefId, dateStart, dateEnd, and granularity.
- **teamRefId is REQUIRED** - If missing, ask the user for the team reference ID
- If no dates are supplied, ask user to default to consider for last month as date range. Fix the dateStart to 1st of last month and dateEnd to last day of last month.
- If granularity is not provided, default it to 'WEEKLY'.
- Always send dateStart and dateEnd in the following format: 'YYYY-MM-DD' (e.g. '2025-10-30')
- Optional parameters include: drillDownStartDate, drillDownEndDate, page, pageSize

When calling sei_deployment_frequency_drilldown, ensure you have: accountId, projectId, orgId, teamRefId, dateStart, and dateEnd.
- **teamRefId is REQUIRED** - If missing, ask the user for the team reference ID
- If no dates are supplied, ask user to default to consider for last month as date range. Fix the dateStart to 1st of last month and dateEnd to last day of last month.
- Always send dateStart and dateEnd in the following format: 'YYYY-MM-DD' (e.g. '2025-10-30')
- Optional parameters include: sortOption, page, pageSize
- This provides detailed pipeline execution records for deployment frequency analysis

When calling sei_change_failure_rate_drilldown, ensure you have: accountId, projectId, orgId, teamRefId, dateStart, and dateEnd.
- **teamRefId is REQUIRED** - If missing, ask the user for the team reference ID
- If no dates are supplied, ask user to default to consider for last month as date range. Fix the dateStart to 1st of last month and dateEnd to last day of last month.
- Always send dateStart and dateEnd in the following format: 'YYYY-MM-DD' (e.g. '2025-10-30')
- Optional parameters include: sortOption, page, pageSize
- This provides detailed deployment records with failure status marking for CFR analysis

When calling sei_get_teams_list, ensure you have: accountId, orgId, and projectId.
- **accountId is REQUIRED** - If missing, ask the user for the Harness Account ID
- **orgId** - Organization ID (default: "default")
- **projectId** - Project ID (default: "SEI_Harness_Prod")
- **pageSize** - Number of teams per page (default: 100, recommended for team lookup)
- **page** - Page number for pagination (default: 0)
- **leafTeamsOnly** - Whether to return only leaf teams (optional boolean)
- This tool is essential for the team name lookup mechanism
- Use a large pageSize (100) to get most teams in one call for name matching

When calling sei_get_org_trees, ensure you have: accountId, orgId, and projectId.
- **accountId is REQUIRED** - If missing, ask the user for the Harness Account ID
- **orgId** - Organization ID (default: "default")
- **projectId** - Project ID (default: "SEI_Harness_Prod")
- **pageIndex** - Page index for pagination (default: 0)
- **pageSize** - Page size for pagination (default: 50)
- This tool is essential for the enhanced team name lookup mechanism
- Returns organizational trees with team hierarchy information
- Use the returned orgTreeId for subsequent sei_get_org_tree_teams calls

When calling sei_get_org_tree_teams, ensure you have: accountId and orgTreeId.
- **accountId is REQUIRED** - If missing, ask the user for the Harness Account ID
- **orgTreeId is REQUIRED** - Must be obtained from sei_get_org_trees response
- This tool provides hierarchical team structure for advanced team lookup
- Returns nested team hierarchy with refIds for all teams and managers
- Essential for finding teams by manager names (e.g., "John Smith's team")
- Provides complete organizational context for team relationships

When calling sei_get_team, ensure you have: accountId and teamRefId.
- **accountId is REQUIRED** - If missing, ask the user for the Harness Account ID
- **teamRefId is REQUIRED** - If missing, ask the user for the team reference ID or teamName
- If teamName is provided, use the team name lookup mechanism to get the teamRefId
- This tool provides detailed information about a specific team
- Returns team metadata, developer count, and integration details

When calling sei_get_team_developers, ensure you have: accountId and teamRefId.
- **accountId is REQUIRED** - If missing, ask the user for the Harness Account ID
- **teamRefId is REQUIRED** - If missing, ask the user for the team reference ID or teamName
- If teamName is provided, use the team name lookup mechanism to get the teamRefId
- Optional parameters include: page, size for pagination
- This tool lists all developers/contributors in a specific team
- Returns developer details with contribution metrics

When calling sei_get_team_integrations, ensure you have: accountId and teamRefId.
- **accountId is REQUIRED** - If missing, ask the user for the Harness Account ID
- **teamRefId is REQUIRED** - If missing, ask the user for the team reference ID or teamName
- If teamName is provided, use the team name lookup mechanism to get the teamRefId
- This tool lists all integrations associated with a specific team
- Returns integration details including type, name, and configuration

When calling sei_get_team_integration_filters, ensure you have: accountId and teamRefId.
- **accountId is REQUIRED** - If missing, ask the user for the Harness Account ID
- **teamRefId is REQUIRED** - If missing, ask the user for the team reference ID or teamName
- If teamName is provided, use the team name lookup mechanism to get the teamRefId
- **integrationType** - Optional integration type to filter by (e.g., SCM, IM, CD)
- This tool provides integration-specific filters for a team
- Returns available filter options for team-specific queries

When calling sei_get_org_tree_by_id, ensure you have: accountId and id.
- **accountId is REQUIRED** - If missing, ask the user for the Harness Account ID
- **id is REQUIRED** - Organization tree ID (numeric)
- This tool retrieves detailed information about a specific organization tree
- Returns complete org tree metadata, profiles, and configuration

When calling sei_get_org_tree_efficiency_profile, ensure you have: accountId and orgTreeId.
- **accountId is REQUIRED** - If missing, ask the user for the Harness Account ID
- **orgTreeId is REQUIRED** - Organization tree ID (numeric)
- This tool gets the efficiency profile reference ID for an organization tree
- Returns efficiency profile configuration and reference details

When calling sei_get_org_tree_productivity_profile, ensure you have: accountId and orgTreeId.
- **accountId is REQUIRED** - If missing, ask the user for the Harness Account ID
- **orgTreeId is REQUIRED** - Organization tree ID (numeric)
- This tool gets the productivity profile reference ID for an organization tree
- Returns productivity profile configuration and reference details

When calling sei_get_org_tree_business_alignment_profile, ensure you have: accountId and orgTreeId.
- **accountId is REQUIRED** - If missing, ask the user for the Harness Account ID
- **orgTreeId is REQUIRED** - Organization tree ID (numeric)
- This tool gets the business alignment profile reference ID for an organization tree
- Returns BA profile configuration and reference details

When calling sei_get_org_tree_integrations, ensure you have: accountId and orgTreeId.
- **accountId is REQUIRED** - If missing, ask the user for the Harness Account ID
- **orgTreeId is REQUIRED** - Organization tree ID (numeric)
- This tool gets all integrations associated with an organization tree
- Returns integration details including types, names, and configurations

When calling sei_get_ba_all_profiles, ensure you have: accountId, projectId, and orgId.
- **accountId is REQUIRED** - If missing, ask the user for the Harness Account ID
- **projectId** - Project ID (default: "SEI_Harness_Prod")
- **orgId** - Organization ID (default: "default")
- This tool retrieves all business alignment profiles
- Returns complete list of BA profiles with metadata

When calling sei_get_ba_insight_metrics, ensure you have: accountId, projectId, orgId, and request.
- **accountId is REQUIRED** - If missing, ask the user for the Harness Account ID
- **projectId** - Project ID (default: "SEI_Harness_Prod")
- **orgId** - Organization ID (default: "default")
- **request is REQUIRED** - BAInsightRequestDTO object with request parameters
- This tool provides BA insight metrics with detailed analysis
- Returns business alignment metrics and insights

When calling sei_get_ba_insight_summary, ensure you have: accountId, projectId, orgId, and request.
- **accountId is REQUIRED** - If missing, ask the user for the Harness Account ID
- **projectId** - Project ID (default: "SEI_Harness_Prod")
- **orgId** - Organization ID (default: "default")
- **request is REQUIRED** - BASummaryRequestDTO object with request parameters
- This tool provides BA insight summary with high-level overview
- Returns business alignment summary and key metrics

When calling sei_get_ba_drilldown_data, ensure you have: accountId, projectId, orgId, and request.
- **accountId is REQUIRED** - If missing, ask the user for the Harness Account ID
- **projectId** - Project ID (default: "SEI_Harness_Prod")
- **orgId** - Organization ID (default: "default")
- **request is REQUIRED** - BADrilldownRequestDTO object with request parameters
- This tool provides detailed BA drilldown data for deep analysis
- Returns granular business alignment data and breakdowns

**IMPORTANT: For all tools that require teamRefId, if the user provides a teamName instead:**
1. **Use the Enhanced Team Name Lookup Mechanism** described above
2. **Convert teamName to teamRefId** using organizational structure discovery
3. **Always use teamRefId** in the final API call, never teamName
4. **Handle lookup failures gracefully** with clear error messages

