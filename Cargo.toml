[package]
name = "harness-mcp-server"
version = "0.1.0"
edition = "2021"
authors = ["Harness Inc."]
description = "A Harness MCP server that provides seamless integration with Harness APIs"
license = "Apache-2.0"
repository = "https://github.com/harness/harness-mcp"
readme = "README.md"

[[bin]]
name = "harness-mcp-server"
path = "src/main.rs"

[dependencies]
# Async runtime
tokio = { version = "1.0", features = ["full"] }

# HTTP client
reqwest = { version = "0.11", features = ["json", "rustls-tls"], default-features = false }

# JSON serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# CLI framework
clap = { version = "4.0", features = ["derive", "env"] }

# Configuration management
config = "0.14"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# UUID generation
uuid = { version = "1.0", features = ["v4", "serde"] }

# JWT handling
jsonwebtoken = "9.0"

# Retry logic
backoff = "0.4"

# Time handling
chrono = { version = "0.4", features = ["serde"] }

# Base64 encoding/decoding
base64 = "0.22"

# URL parsing
url = "2.0"

# Environment variable handling
dotenvy = "0.15"

# MCP protocol (we'll need to find or create a Rust MCP library)
# For now, we'll implement the MCP protocol manually using JSON-RPC
jsonrpc-core = "18.0"

# Additional utilities
once_cell = "1.0"
futures = "0.3"
async-trait = "0.1"

[dev-dependencies]
tokio-test = "0.4"
mockito = "1.0"

[profile.release]
lto = true
codegen-units = 1
panic = "abort"

[profile.dev]
debug = true