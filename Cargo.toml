[package]
name = "harness-mcp-server"
version = "0.1.0"
edition = "2021"
authors = ["Harness Inc."]
description = "Harness MCP (Model Context Protocol) Server - Rust implementation"
license = "Apache-2.0"
repository = "https://github.com/harness/mcp-server"
readme = "README.md"

[[bin]]
name = "harness-mcp-server"
path = "src/main.rs"

[dependencies]
# Async runtime
tokio = { version = "1.0", features = ["full"] }

# HTTP client and server
reqwest = { version = "0.11", features = ["json", "rustls-tls"], default-features = false }
axum = { version = "0.7", features = ["json", "tokio", "tower-log"] }
tower = { version = "0.4", features = ["util", "timeout", "load-shed", "limit"] }
tower-http = { version = "0.5", features = ["cors", "trace", "timeout"] }
hyper = { version = "1.0", features = ["full"] }

# JSON serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Configuration and CLI
clap = { version = "4.0", features = ["derive", "env"] }
config = "0.14"
toml = "0.8"

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Logging and tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
tracing-appender = "0.2"

# Authentication and security
jsonwebtoken = "9.0"
uuid = { version = "1.0", features = ["v4", "serde"] }

# Time handling
chrono = { version = "0.4", features = ["serde"] }

# Retry and backoff
backoff = { version = "0.4", features = ["tokio"] }

# URL handling
url = { version = "2.0", features = ["serde"] }

# Environment variables
dotenvy = "0.15"

# Validation
validator = { version = "0.18", features = ["derive"] }

# Utilities
once_cell = "1.0"
futures = "0.3"

[dev-dependencies]
# Testing
tokio-test = "0.4"
mockito = "1.0"
tempfile = "3.0"
assert_matches = "1.5"

[features]
default = ["stdio", "http"]
stdio = []
http = []

[profile.release]
lto = true
codegen-units = 1
panic = "abort"
strip = true

[profile.dev]
debug = true