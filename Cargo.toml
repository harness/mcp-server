[package]
name = "harness-mcp-server"
version = "0.1.0"
edition = "2021"
authors = ["Harness Inc."]
description = "A Harness MCP server that handles various tools and resources"
license = "Apache-2.0"
repository = "https://github.com/harness/harness-mcp"
readme = "README.md"

[[bin]]
name = "harness-mcp-server"
path = "src/bin/harness-mcp-server/main.rs"

[dependencies]
# Core async runtime
tokio = { version = "1.0", features = ["full"] }

# HTTP client (equivalent to hashicorp/go-retryablehttp)
reqwest = { version = "0.11", features = ["json", "rustls-tls"], default-features = false }

# CLI framework (equivalent to spf13/cobra)
clap = { version = "4.0", features = ["derive", "env"] }

# Configuration management (equivalent to spf13/viper)
config = "0.14"
serde = { version = "1.0", features = ["derive"] }

# JSON Web Tokens (equivalent to golang-jwt/jwt)
jsonwebtoken = "9.0"

# UUID generation (equivalent to google/uuid)
uuid = { version = "1.0", features = ["v4", "serde"] }

# Logging (equivalent to slog)
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Serialization (equivalent to YAML parsing)
serde_json = "1.0"
serde_yaml = "0.9"

# HTTP server framework
axum = "0.7"
tower = "0.4"
tower-http = { version = "0.5", features = ["cors", "trace"] }

# Time handling
chrono = { version = "0.4", features = ["serde"] }

# Environment variables
dotenvy = "0.15"

# Backoff and retry logic (equivalent to cenkalti/backoff)
backoff = "0.4"

# Async traits
async-trait = "0.1"

# MCP protocol support (will need to find Rust equivalent or implement)
# Note: mark3labs/mcp-go equivalent would need to be implemented or found

[dev-dependencies]
# Testing framework (equivalent to testify)
tokio-test = "0.4"
mockall = "0.12"
wiremock = "0.6"

[features]
default = ["rustls-tls"]
rustls-tls = ["reqwest/rustls-tls"]

[profile.release]
lto = true
codegen-units = 1
panic = "abort"
strip = true

[workspace]
members = [
    ".",
    "crates/*"
]