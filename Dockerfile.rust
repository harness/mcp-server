# ---------------------------------------------------------#
#                   Build Harness Rust image              #
# ---------------------------------------------------------#
FROM --platform=$BUILDPLATFORM rust:1.75-alpine AS builder

# Install build dependencies
RUN apk add --no-cache musl-dev pkgconfig openssl-dev

# Setup working dir
WORKDIR /app

# Copy Cargo files for dependency caching
COPY Cargo.toml Cargo.lock ./
COPY crates/ ./crates/

# Create a dummy main.rs for dependency building
RUN mkdir src && echo "fn main() {}" > src/main.rs

# Build dependencies
RUN --mount=type=cache,target=/usr/local/cargo/registry \
    --mount=type=cache,target=/app/target \
    cargo build --release && rm src/main.rs

# Copy the actual source code
COPY src/ ./src/

# Build the application
RUN --mount=type=cache,target=/usr/local/cargo/registry \
    --mount=type=cache,target=/app/target \
    cargo build --release && \
    cp target/release/harness-mcp-server /usr/local/bin/harness-mcp-server

### Pull CA Certs
FROM --platform=$BUILDPLATFORM alpine:latest AS cert-image

RUN apk --update add ca-certificates

# ---------------------------------------------------------#
#                   Create final image                     #
# ---------------------------------------------------------#
FROM alpine:3.21 AS final

# setup app dir and its content
WORKDIR /app
VOLUME /data

ENV XDG_CACHE_HOME=/data

COPY --from=builder /usr/local/bin/harness-mcp-server /app/harness-mcp-server
COPY --from=cert-image /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt

ENTRYPOINT [ "/app/harness-mcp-server", "stdio" ]