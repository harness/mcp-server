components:
  parameters:
    AccountIdentifierParam:
      description: Account Identifier
      in: query
      name: accountIdentifier
      schema:
        type: string
    LabelsParam:
      description: Label.
      in: query
      name: label
      schema:
        items:
          type: string
        type: array
    RegistryIdentifierParam:
      description: Registry Identifier
      in: query
      name: reg_identifier
      schema:
        items:
          type: string
        type: array
    RegistryIdentifierPathParam:
      description: Unique registry Identifier in a account.
      in: path
      name: registry_identifier
      required: true
      schema:
        type: string
    RegistryTypeParam:
      description: Registry Type
      in: query
      name: type
      schema:
        enum:
          - VIRTUAL
          - UPSTREAM
        type: string
    artifactParam:
      description: Artifat
      in: query
      name: artifact
      schema:
        type: string
    artifactPathParam:
      description: Name of artifact.
      in: path
      name: artifact
      required: true
      schema:
        type: string
    childVersionParam:
      description: Child version incase of Docker artifacts.
      in: query
      name: childVersion
      schema:
        type: string
    deployedArtifact:
      description: Deployed Artifact Filter.
      in: query
      name: deployed_artifact
      schema:
        type: boolean
    digestOptParam:
      description: Digest.
      in: query
      name: digest
      schema:
        type: string
    digestParam:
      description: Digest.
      in: query
      name: digest
      required: true
      schema:
        type: string
    envType:
      description: env type
      in: query
      name: env_type
      schema:
        description: Environment Type
        enum:
          - PreProduction
          - Production
        type: string
    fromDateParam:
      description: Date. Format - MM/DD/YYYY
      in: query
      name: from
      schema:
        type: string
    latestVersion:
      description: Latest Version Filter.
      in: query
      name: latest_version
      schema:
        type: boolean
    packageTypeParam:
      description: Registry Package Type
      in: query
      name: package_type
      schema:
        items:
          type: string
        type: array
    pageNumber:
      description: Current page number
      in: query
      name: page
      schema:
        default: 1
        format: int64
        type: integer
    pageSize:
      description: Number of items per page
      in: query
      name: size
      schema:
        default: 20
        format: int64
        type: integer
    recursiveParam:
      description: Whether to list registries recursively.
      in: query
      name: recursive
      schema:
        default: false
        type: boolean
    registryRefPathParam:
      description: Unique registry path.
      in: path
      name: registry_ref
      required: true
      schema:
        type: string
    searchTerm:
      description: search Term.
      in: query
      name: search_term
      schema:
        type: string
    sortField:
      description: sortField
      in: query
      name: sort_field
      schema:
        type: string
    sortOrder:
      description: sortOrder
      in: query
      name: sort_order
      schema:
        type: string
    spaceRefPathParam:
      description: Unique space path.
      in: path
      name: space_ref
      required: true
      schema:
        type: string
    spaceRefQueryParam:
      description: Unique space path
      in: query
      name: space_ref
      schema:
        type: string
    toDateParam:
      description: Date. Format - MM/DD/YYYY
      in: query
      name: to
      schema:
        type: string
    versionParam:
      description: Version
      in: query
      name: version
      schema:
        type: string
    versionPathParam:
      description: Name of Artifact Version.
      in: path
      name: version
      required: true
      schema:
        type: string
    webhookExecutionIdPathParam:
      description: Unique webhook execution identifier.
      in: path
      name: webhook_execution_id
      required: true
      schema:
        type: string
    webhookIdentifierPathParam:
      description: Unique webhook identifier.
      in: path
      name: webhook_identifier
      required: true
      schema:
        type: string
  requestBodies:
    ArtifactLabelRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArtifactLabelRequest'
      description: request to update artifact labels
    RegistryRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegistryRequest'
      description: request for create and update registry
    ReplicationRuleRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReplicationRuleRequest'
      description: request for create and update replication rule
    WebhookRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebhookRequest'
      description: request for create and update webhook
  responses:
    ArtifactDeploymentsResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/ArtifactDeploymentsDetails'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response to get docker artifact deployments details
    ArtifactDetailResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/ArtifactDetail'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response to get artifact details
    ArtifactLabelResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/ArtifactSummary'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response to get artifact label response
    ArtifactStatsResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/ArtifactStats'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response to get artifact stats response
    ArtifactSummaryResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/ArtifactSummary'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response to get artifact summary
    ArtifactVersionSummaryResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/ArtifactVersionSummary'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response to get docker artifact version summary
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad request
    ClientSetupDetailsResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/ClientSetupDetails'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response for client setup details
    DockerArtifactDetailIntegrationResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/DockerArtifactIntegrationDetail'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response to get docker artifact integration detail
    DockerArtifactDetailResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/DockerArtifactDetail'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response to get docker artifact detail
    DockerArtifactManifestResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/DockerArtifactManifest'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response to get docker artifact manifest
    DockerLayersResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/DockerLayersSummary'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response to get artifact layers
    DockerManifestsResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/DockerManifests'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response to get artifact layers
    FileDetailResponse:
      content:
        application/json:
          schema:
            properties:
              files:
                description: A list of Harness Artifact Files
                items:
                  $ref: '#/components/schemas/FileDetail'
                type: array
              itemCount:
                description: The total number of items
                example: 1
                format: int64
                type: integer
              pageCount:
                description: The total number of pages
                example: 100
                format: int64
                type: integer
              pageIndex:
                description: The current page
                example: 0
                format: int64
                type: integer
              pageSize:
                description: The number of items per page
                example: 1
                type: integer
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
              - files
            type: object
      description: response to get artifact files
    HelmArtifactDetailResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/HelmArtifactDetail'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response to get helm artifact detail
    HelmArtifactManifestResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/HelmArtifactManifest'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response to get helm artifact manifest
    InternalServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Internal server error
    ListArtifactLabelResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/ListArtifactLabel'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response for list artifact labels
    ListArtifactResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/ListArtifact'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response for list artifact
    ListArtifactVersionResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/ListArtifactVersion'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response for list versions of artifact
    ListMigrationImageResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/ListMigrationImage'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: Response for list migration images
    ListRegistryArtifactResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/ListRegistryArtifact'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response for list artifact
    ListRegistryResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/ListRegistry'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response for list registry
    ListReplicationRuleResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/ListReplicationRule'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: Response for list replication rules
    ListWebhooksExecutionResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/ListWebhooksExecutions'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: list webhooks executions response
    ListWebhooksResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/ListWebhooks'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response for list webhooks
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The specified resource was not found
    PlainTextResponse:
      content:
        text/plain; charset=utf-8:
          schema:
            example: Hello, world!
            type: string
      description: A plain text response
    Redirect:
      description: Temporary Redirect
      headers:
        Location:
          description: The URL of the redirected resource
          schema:
            format: uri
            type: string
    RegistryResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/Registry'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response for create, get and update registry
    ReplicationRuleResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/ReplicationRule'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: Response for replication rule update
    StorageDetailsResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/StorageDetails'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response for storage details
    Success:
      content:
        application/json:
          schema:
            properties:
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
            type: object
      description: Success Response
    Unauthenticated:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Unauthenticated
    Unauthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Unauthorized
    WebhookExecutionResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/WebhookExecution'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: webhook execution response
    WebhookResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/Webhook'
              status:
                $ref: '#/components/schemas/Status'
            required:
              - status
              - data
            type: object
      description: response for create, get and update webhook
  schemas:
    AccessKeySecretKey:
      properties:
        accessKey:
          type: string
        accessKeySecretIdentifier:
          type: string
        accessKeySecretSpaceId:
          format: int64
          type: integer
        accessKeySecretSpacePath:
          type: string
        secretKeyIdentifier:
          type: string
        secretKeySpaceId:
          format: int64
          type: integer
        secretKeySpacePath:
          type: string
      required:
        - secretKeyIdentifier
    Anonymous: {}
    ArtifactDeploymentsDetail:
      description: Artifact deployments Detail
      properties:
        count:
          type: integer
        envIdentifier:
          type: string
        envName:
          type: string
        envType:
          $ref: '#/components/schemas/EnvironmentType'
        infraIdentifier:
          type: string
        infraName:
          type: string
        lastDeployedAt:
          type: string
        lastDeployedById:
          type: string
        lastDeployedByName:
          type: string
        lastPipelineExecutionId:
          type: string
        lastPipelineExecutionName:
          type: string
        orgIdentifier:
          type: string
        pipelineId:
          type: string
        projectIdentifier:
          type: string
        serviceIdentifier:
          type: string
        serviceName:
          type: string
      type: object
    ArtifactDeploymentsDetails:
      description: Docker Artifact deployments Details
      properties:
        deployments:
          $ref: '#/components/schemas/ArtifactDeploymentsList'
        deploymentsStats:
          $ref: '#/components/schemas/DeploymentStats'
      required:
        - deployments
      type: object
    ArtifactDeploymentsList:
      description: A list of Artifact Deployments
      properties:
        deployments:
          description: A list of Artifact
          items:
            $ref: '#/components/schemas/ArtifactDeploymentsDetail'
          type: array
        itemCount:
          description: The total number of items
          example: 1
          format: int64
          type: integer
        pageCount:
          description: The total number of pages
          example: 100
          format: int64
          type: integer
        pageIndex:
          description: The current page
          example: 0
          format: int64
          type: integer
        pageSize:
          description: The number of items per page
          example: 1
          type: integer
      required:
        - artifacts
      type: object
    ArtifactDetail:
      description: Artifact Detail
      discriminator:
        mapping:
          DOCKER: '#/components/schemas/DockerArtifactDetailConfig'
          GENERIC: '#/components/schemas/GenericArtifactDetailConfig'
          HELM: '#/components/schemas/HelmArtifactDetailConfig'
          MAVEN: '#/components/schemas/MavenArtifactDetailConfig'
          NPM: '#/components/schemas/NpmArtifactDetailConfig'
          PYTHON: '#/components/schemas/PythonArtifactDetailConfig'
          RPM: '#/components/schemas/RpmArtifactDetailConfig'
        propertyName: packageType
      oneOf:
        - $ref: '#/components/schemas/DockerArtifactDetailConfig'
        - $ref: '#/components/schemas/HelmArtifactDetailConfig'
        - $ref: '#/components/schemas/GenericArtifactDetailConfig'
        - $ref: '#/components/schemas/MavenArtifactDetailConfig'
        - $ref: '#/components/schemas/PythonArtifactDetailConfig'
        - $ref: '#/components/schemas/NpmArtifactDetailConfig'
        - $ref: '#/components/schemas/RpmArtifactDetailConfig'
      properties:
        createdAt:
          type: string
        createdBy:
          type: string
        downloadCount:
          format: int64
          type: integer
        modifiedAt:
          type: string
        name:
          type: string
        packageType:
          $ref: '#/components/schemas/PackageType'
        size:
          type: string
        version:
          type: string
      required:
        - imageName
        - version
        - registryPath
        - url
        - packageType
      type: object
    ArtifactLabelRequest:
      properties:
        labels:
          items:
            type: string
          type: array
      required:
        - labels
      type: object
    ArtifactMetadata:
      description: Artifact Metadata
      properties:
        deploymentMetadata:
          $ref: '#/components/schemas/DeploymentMetadata'
        downloadsCount:
          format: int64
          type: integer
        labels:
          items:
            type: string
          type: array
        lastModified:
          type: string
        latestVersion:
          type: string
        name:
          type: string
        packageType:
          $ref: '#/components/schemas/PackageType'
        pullCommand:
          type: string
        registryIdentifier:
          type: string
        registryPath:
          type: string
        version:
          type: string
      required:
        - name
        - registryIdentifier
        - latestVersion
        - registryPath
        - version
      type: object
    ArtifactStats:
      description: Harness Artifact Stats
      properties:
        downloadCount:
          format: int64
          type: integer
        downloadSize:
          format: int64
          type: integer
        totalStorageSize:
          format: int64
          type: integer
        uploadSize:
          format: int64
          type: integer
      type: object
    ArtifactSummary:
      description: Harness Artifact Summary
      properties:
        createdAt:
          type: string
        downloadsCount:
          format: int64
          type: integer
        imageName:
          type: string
        labels:
          items:
            type: string
          type: array
        modifiedAt:
          type: string
        packageType:
          $ref: '#/components/schemas/PackageType'
      required:
        - imageName
        - packageType
      type: object
    ArtifactVersionMetadata:
      description: Artifact Version Metadata
      properties:
        deploymentMetadata:
          $ref: '#/components/schemas/DeploymentMetadata'
        digestCount:
          format: int64
          type: integer
        downloadsCount:
          format: int64
          type: integer
        fileCount:
          format: int64
          type: integer
        lastModified:
          type: string
        name:
          type: string
        packageType:
          $ref: '#/components/schemas/PackageType'
        pullCommand:
          type: string
        registryIdentifier:
          type: string
        registryPath:
          type: string
        size:
          type: string
      required:
        - name
        - registryIdentifier
        - latestVersion
        - registryPath
      type: object
    ArtifactVersionSummary:
      description: Docker Artifact Version Summary
      properties:
        imageName:
          type: string
        packageType:
          $ref: '#/components/schemas/PackageType'
        sscaArtifactId:
          type: string
        sscaArtifactSourceId:
          type: string
        stoExecutionId:
          type: string
        stoPipelineId:
          type: string
        version:
          type: string
      required:
        - imageName
        - version
        - packageType
      type: object
    AuthType:
      description: Authentication type
      enum:
        - UserPassword
        - Anonymous
      type: string
    BuildDetails:
      properties:
        orgIdentifier:
          type: string
        pipelineDisplayName:
          type: string
        pipelineExecutionId:
          type: string
        pipelineIdentifier:
          type: string
        projectIdentifier:
          type: string
        stageExecutionId:
          type: string
        stepExecutionId:
          type: string
      type: object
    CleanupPolicy:
      description: Cleanup Policy for Harness Artifact Registries
      properties:
        expireDays:
          type: integer
        name:
          type: string
        packagePrefix:
          items:
            type: string
          type: array
        versionPrefix:
          items:
            type: string
          type: array
      type: object
    ClientSetupDetails:
      description: Client Setup Details
      properties:
        mainHeader:
          type: string
        secHeader:
          type: string
        sections:
          items:
            $ref: '#/components/schemas/ClientSetupSection'
          type: array
      required:
        - mainHeader
        - secHeader
        - sections
      type: object
    ClientSetupSection:
      description: Client Setup Section
      discriminator:
        mapping:
          INLINE: '#/components/schemas/ClientSetupStepConfig'
          TABS: '#/components/schemas/TabSetupStepConfig'
        propertyName: type
      oneOf:
        - $ref: '#/components/schemas/ClientSetupStepConfig'
        - $ref: '#/components/schemas/TabSetupStepConfig'
      properties:
        header:
          type: string
        secHeader:
          type: string
        type:
          $ref: '#/components/schemas/SectionType'
      required:
        - type
      type: object
    ClientSetupStep:
      description: Client Setup Step
      properties:
        commands:
          items:
            $ref: '#/components/schemas/ClientSetupStepCommand'
          type: array
        header:
          type: string
        type:
          $ref: '#/components/schemas/ClientSetupStepType'
      type: object
    ClientSetupStepCommand:
      description: Client Setup Step Command
      properties:
        label:
          type: string
        value:
          type: string
      type: object
    ClientSetupStepConfig:
      description: Client Setup Step
      properties:
        steps:
          items:
            $ref: '#/components/schemas/ClientSetupStep'
          type: array
      type: object
    ClientSetupStepType:
      description: ClientSetupStepType type
      enum:
        - Static
        - GenerateToken
      type: string
    DeploymentDetails:
      properties:
        nonProdDeployment:
          type: integer
        prodDeployment:
          type: integer
        totalDeployment:
          type: integer
      required:
        - prodDeployment
        - nonProdDeployment
        - totalDeployment
      type: object
    DeploymentMetadata:
      properties:
        nonProdEnvCount:
          type: integer
        prodEnvCount:
          type: integer
      required:
        - prodEnvCount
        - nonProdEnvCount
      type: object
    DeploymentStats:
      description: DeploymentStats
      properties:
        PreProduction:
          type: integer
        Production:
          type: integer
      required:
        - Production
        - PreProduction
      type: object
    DockerArtifactDetail:
      description: Docker Artifact Detail
      properties:
        createdAt:
          type: string
        downloadsCount:
          format: int64
          type: integer
        imageName:
          type: string
        modifiedAt:
          type: string
        packageType:
          $ref: '#/components/schemas/PackageType'
        pullCommand:
          type: string
        registryPath:
          type: string
        size:
          type: string
        url:
          type: string
        version:
          type: string
      required:
        - imageName
        - version
        - registryPath
        - url
        - packageType
      type: object
    DockerArtifactDetailConfig:
      description: Config for docker artifact details
      properties:
        pullCommand:
          type: string
      type: object
    DockerArtifactIntegrationDetail:
      description: Docker Artifact Detail
      properties:
        buildDetails:
          $ref: '#/components/schemas/BuildDetails'
        deploymentsDetails:
          $ref: '#/components/schemas/DeploymentDetails'
        sbomDetails:
          $ref: '#/components/schemas/SBOMDetails'
        slsaDetails:
          $ref: '#/components/schemas/SLSADetails'
        stoDetails:
          $ref: '#/components/schemas/STODetails'
      type: object
    DockerArtifactManifest:
      description: Docker Artifact Manifest
      properties:
        manifest:
          type: string
      required:
        - manifest
      type: object
    DockerLayerEntry:
      description: Harness Artifact Layers
      properties:
        command:
          type: string
        size:
          type: string
      required:
        - command
      type: object
    DockerLayersSummary:
      description: Harness Layers Summary
      properties:
        digest:
          type: string
        layers:
          items:
            $ref: '#/components/schemas/DockerLayerEntry'
          type: array
        osArch:
          type: string
      required:
        - digest
      type: object
    DockerManifestDetails:
      description: Harness Artifact Layers
      properties:
        createdAt:
          type: string
        digest:
          type: string
        downloadsCount:
          format: int64
          type: integer
        osArch:
          type: string
        size:
          type: string
        stoDetails:
          $ref: '#/components/schemas/STODetails'
        stoExecutionId:
          type: string
        stoPipelineId:
          type: string
      required:
        - digest
        - layers
        - osArch
      type: object
    DockerManifests:
      description: Harness Manifests
      properties:
        imageName:
          type: string
        manifests:
          items:
            $ref: '#/components/schemas/DockerManifestDetails'
          type: array
        version:
          type: string
      required:
        - imageName
        - version
      type: object
    EnvironmentType:
      description: Environment Type
      enum:
        - PreProduction
        - Production
      type: string
    Error:
      properties:
        code:
          description: The http error code
          example: "404"
          type: string
        details:
          description: Additional details about the error
          type: object
        message:
          description: The reason the request failed
          type: string
      required:
        - code
        - message
      type: object
    ExtraHeader:
      description: Webhook Extra Header
      properties:
        key:
          type: string
        value:
          type: string
      required:
        - key
        - value
      type: object
    FileDetail:
      description: File Detail
      properties:
        checksums:
          items:
            type: string
          type: array
        createdAt:
          type: string
        downloadCommand:
          type: string
        name:
          type: string
        size:
          type: string
      required:
        - name
        - size
        - checksums
        - downloadCommand
        - createdAt
      type: object
    GenericArtifactDetailConfig:
      description: Config for generic artifact details
      properties:
        description:
          type: string
      type: object
    HelmArtifactDetail:
      description: Helm Artifact Detail
      properties:
        artifact:
          type: string
        createdAt:
          type: string
        downloadsCount:
          format: int64
          type: integer
        modifiedAt:
          type: string
        packageType:
          $ref: '#/components/schemas/PackageType'
        pullCommand:
          type: string
        registryPath:
          type: string
        size:
          type: string
        url:
          type: string
        version:
          type: string
      required:
        - imageName
        - version
        - registryPath
        - url
        - packageType
      type: object
    HelmArtifactDetailConfig:
      description: Config for helm artifact details
      properties:
        pullCommand:
          type: string
      type: object
    HelmArtifactManifest:
      description: Helm Artifact Manifest
      properties:
        manifest:
          type: string
      required:
        - manifest
      type: object
    JfrogReplicationRegistry:
      properties:
        namespace:
          type: string
        passwordSecretId:
          type: string
        passwordSecretSpaceId:
          type: string
        url:
          format: uri
          type: string
        username:
          type: string
      required:
        - url
        - namespace
      type: object
    ListArtifact:
      description: A list of Artifacts
      properties:
        artifacts:
          description: A list of Artifact
          items:
            $ref: '#/components/schemas/ArtifactMetadata'
          type: array
        itemCount:
          description: The total number of items
          example: 1
          format: int64
          type: integer
        pageCount:
          description: The total number of pages
          example: 100
          format: int64
          type: integer
        pageIndex:
          description: The current page
          example: 0
          format: int64
          type: integer
        pageSize:
          description: The number of items per page
          example: 1
          type: integer
      required:
        - artifacts
      type: object
    ListArtifactLabel:
      description: A list of Harness Artifact Labels
      properties:
        itemCount:
          description: The total number of items
          example: 1
          format: int64
          type: integer
        labels:
          items:
            type: string
          type: array
        pageCount:
          description: The total number of pages
          example: 100
          format: int64
          type: integer
        pageIndex:
          description: The current page
          example: 0
          format: int64
          type: integer
        pageSize:
          description: The number of items per page
          example: 1
          type: integer
      required:
        - labels
      type: object
    ListArtifactVersion:
      description: A list of Artifact versions
      properties:
        artifactVersions:
          description: A list of Artifact versions
          items:
            $ref: '#/components/schemas/ArtifactVersionMetadata'
          type: array
        itemCount:
          description: The total number of items
          example: 1
          format: int64
          type: integer
        pageCount:
          description: The total number of pages
          example: 100
          format: int64
          type: integer
        pageIndex:
          description: The current page
          example: 0
          format: int64
          type: integer
        pageSize:
          description: The number of items per page
          example: 1
          type: integer
      required:
        - artifacts
      type: object
    ListMigrationImage:
      description: A list of migration images
      properties:
        images:
          description: A list of Artifact versions
          items:
            $ref: '#/components/schemas/MigrationImage'
          type: array
        itemCount:
          description: The total number of items
          example: 1
          format: int64
          type: integer
        pageCount:
          description: The total number of pages
          example: 100
          format: int64
          type: integer
        pageIndex:
          description: The current page
          example: 0
          format: int64
          type: integer
        pageSize:
          description: The number of items per page
          example: 1
          type: integer
      required:
        - pageCount
        - itemCount
        - pageSize
        - pageIndex
        - images
      type: object
    ListRegistry:
      description: A list of Harness Artifact Registries
      properties:
        itemCount:
          description: The total number of items
          example: 1
          format: int64
          type: integer
        pageCount:
          description: The total number of pages
          example: 100
          format: int64
          type: integer
        pageIndex:
          description: The current page
          example: 0
          format: int64
          type: integer
        pageSize:
          description: The number of items per page
          example: 1
          type: integer
        registries:
          description: A list of Harness Artifact Registries
          items:
            $ref: '#/components/schemas/RegistryMetadata'
          type: array
      required:
        - registries
      type: object
    ListRegistryArtifact:
      description: A list of Artifacts
      properties:
        artifacts:
          description: A list of Artifact
          items:
            $ref: '#/components/schemas/RegistryArtifactMetadata'
          type: array
        itemCount:
          description: The total number of items
          example: 1
          format: int64
          type: integer
        pageCount:
          description: The total number of pages
          example: 100
          format: int64
          type: integer
        pageIndex:
          description: The current page
          example: 0
          format: int64
          type: integer
        pageSize:
          description: The number of items per page
          example: 1
          type: integer
      required:
        - artifacts
      type: object
    ListReplicationRule:
      description: A list of replication rules
      properties:
        itemCount:
          description: The total number of items
          example: 1
          format: int64
          type: integer
        pageCount:
          description: The total number of pages
          example: 100
          format: int64
          type: integer
        pageIndex:
          description: The current page
          example: 0
          format: int64
          type: integer
        pageSize:
          description: The number of items per page
          example: 10
          type: integer
        rules:
          description: A list of Replication Rules
          items:
            $ref: '#/components/schemas/ReplicationRule'
          type: array
      required:
        - pageCount
        - itemCount
        - pageSize
        - pageIndex
        - rules
      type: object
    ListWebhooks:
      description: A list of Harness Registries webhooks
      properties:
        itemCount:
          description: The total number of items
          example: 1
          format: int64
          type: integer
        pageCount:
          description: The total number of pages
          example: 100
          format: int64
          type: integer
        pageIndex:
          description: The current page
          example: 0
          format: int64
          type: integer
        pageSize:
          description: The number of items per page
          example: 1
          type: integer
        webhooks:
          description: A list of Registries webhooks
          items:
            $ref: '#/components/schemas/Webhook'
          type: array
      required:
        - webhooks
      type: object
    ListWebhooksExecutions:
      description: A list of Harness Registries webhooks executions
      properties:
        executions:
          description: A list of Registries webhooks executions
          items:
            $ref: '#/components/schemas/WebhookExecution'
          type: array
        itemCount:
          description: The total number of items
          example: 1
          format: int64
          type: integer
        pageCount:
          description: The total number of pages
          example: 100
          format: int64
          type: integer
        pageIndex:
          description: The current page
          example: 0
          format: int64
          type: integer
        pageSize:
          description: The number of items per page
          example: 1
          type: integer
      required:
        - executions
      type: object
    LocalReplicationRegistry:
      properties:
        registryIdentifier:
          type: string
      required:
        - registryIdentifier
      type: object
    MavenArtifactDetailConfig:
      description: Config for maven artifact details
      properties:
        artifactId:
          type: string
        groupId:
          type: string
      type: object
    MigrationImage:
      properties:
        imageId:
          type: string
        imageTag:
          type: string
        progress:
          type: integer
        status:
          type: string
      type: object
    MigrationLog:
      properties:
        message:
          type: string
        timestamp:
          type: string
      type: object
    NpmArtifactDetailConfig:
      description: Config for npm artifact details
      properties:
        metadata:
          additionalProperties: true
          type: object
      type: object
    PackageType:
      description: refers to package
      enum:
        - DOCKER
        - MAVEN
        - GENERIC
        - HELM
      type: string
    PythonArtifactDetailConfig:
      description: Config for python artifact details
      properties:
        metadata:
          additionalProperties: true
          type: object
      type: object
    Registry:
      description: Harness Artifact Registry
      properties:
        allowedPattern:
          items:
            type: string
          type: array
        blockedPattern:
          items:
            type: string
          type: array
        cleanupPolicy:
          items:
            $ref: '#/components/schemas/CleanupPolicy'
          type: array
        config:
          $ref: '#/components/schemas/RegistryConfig'
        createdAt:
          type: string
        description:
          type: string
        identifier:
          type: string
        labels:
          items:
            type: string
          type: array
        modifiedAt:
          type: string
        packageType:
          $ref: '#/components/schemas/PackageType'
        scanners:
          items:
            $ref: '#/components/schemas/Scanner'
          type: array
        url:
          type: string
      required:
        - name
        - identifier
        - type
        - url
        - packageType
      type: object
    RegistryArtifactMetadata:
      description: Artifact Metadata
      properties:
        downloadsCount:
          format: int64
          type: integer
        labels:
          items:
            type: string
          type: array
        lastModified:
          type: string
        latestVersion:
          type: string
        name:
          type: string
        packageType:
          $ref: '#/components/schemas/PackageType'
        registryIdentifier:
          type: string
        registryPath:
          type: string
      required:
        - name
        - registryIdentifier
        - latestVersion
        - registryPath
      type: object
    RegistryConfig:
      description: SubConfig specific for Virtual or Upstream Registry
      discriminator:
        mapping:
          UPSTREAM: '#/components/schemas/UpstreamConfig'
          VIRTUAL: '#/components/schemas/VirtualConfig'
        propertyName: type
      oneOf:
        - $ref: '#/components/schemas/VirtualConfig'
        - $ref: '#/components/schemas/UpstreamConfig'
      properties:
        type:
          $ref: '#/components/schemas/RegistryType'
      required:
        - type
      type: object
    RegistryMetadata:
      description: Harness Artifact Registry Metadata
      properties:
        artifactsCount:
          format: int64
          type: integer
        description:
          type: string
        downloadsCount:
          format: int64
          type: integer
        identifier:
          type: string
        labels:
          items:
            type: string
          type: array
        lastModified:
          type: string
        packageType:
          $ref: '#/components/schemas/PackageType'
        path:
          type: string
        registrySize:
          type: string
        type:
          $ref: '#/components/schemas/RegistryType'
        url:
          type: string
      required:
        - type
        - packageType
        - identifier
        - url
      x-go-type-skip-optional-pointer: true
      type: object
    RegistryRequest:
      properties:
        allowedPattern:
          items:
            type: string
          type: array
        blockedPattern:
          items:
            type: string
          type: array
        cleanupPolicy:
          items:
            $ref: '#/components/schemas/CleanupPolicy'
          type: array
        config:
          $ref: '#/components/schemas/RegistryConfig'
        description:
          type: string
        identifier:
          type: string
        labels:
          items:
            type: string
          type: array
        packageType:
          $ref: '#/components/schemas/PackageType'
        parentRef:
          type: string
        scanners:
          items:
            $ref: '#/components/schemas/Scanner'
          type: array
      required:
        - identifier
        - type
        - packageType
      type: object
    RegistryType:
      description: refers to type of registry i.e virtual or upstream
      discriminator:
        propertyName: type
      enum:
        - VIRTUAL
        - UPSTREAM
      type: string
    ReplicationRegistry:
      oneOf:
        - $ref: '#/components/schemas/LocalReplicationRegistry'
        - $ref: '#/components/schemas/JfrogReplicationRegistry'
    ReplicationRule:
      properties:
        allowedPatterns:
          items:
            type: string
          type: array
        blockedPatterns:
          items:
            type: string
          type: array
        createdAt:
          type: string
        destination:
          $ref: '#/components/schemas/ReplicationRegistry'
        destinationType:
          enum:
            - Local
            - Jfrog
            - GCP
          type: string
        identifier:
          type: string
        modifiedAt:
          type: string
        parentRef:
          type: string
        source:
          $ref: '#/components/schemas/ReplicationRegistry'
        sourceType:
          enum:
            - Local
            - Jfrog
            - GCP
          type: string
      required:
        - identifier
        - source
        - destination
        - sourceType
        - destinationType
        - allowedPatterns
        - blockedPatterns
        - parentRef
        - modifiedAt
        - createdAt
      type: object
    ReplicationRuleRequest:
      properties:
        allowedPatterns:
          items:
            type: string
          type: array
        blockedPatterns:
          items:
            type: string
          type: array
        destination:
          $ref: '#/components/schemas/ReplicationRegistry'
        destinationType:
          enum:
            - Local
            - Jfrog
            - GCP
          type: string
        source:
          $ref: '#/components/schemas/ReplicationRegistry'
        sourceType:
          enum:
            - Local
            - Jfrog
            - GCP
          type: string
      required:
        - source
        - destination
        - sourceType
        - destinationType
        - allowedPatterns
        - blockedPatterns
      type: object
    RpmArtifactDetailConfig:
      description: Config for RPM artifact details
      properties:
        metadata:
          additionalProperties: true
          type: object
      type: object
    SBOMDetails:
      properties:
        allowListViolations:
          type: integer
        artifactId:
          type: string
        artifactSourceId:
          type: string
        avgScore:
          type: string
        componentsCount:
          type: integer
        denyListViolations:
          type: integer
        maxScore:
          type: string
        orchestrationId:
          type: string
        orgId:
          type: string
        projectId:
          type: string
      type: object
    SLSADetails:
      properties:
        provenanceId:
          type: string
        status:
          type: string
      type: object
    STODetails:
      properties:
        critical:
          type: integer
        executionId:
          type: string
        high:
          type: integer
        ignored:
          type: integer
        info:
          type: integer
        lastScanned:
          type: string
        low:
          type: integer
        medium:
          type: integer
        pipelineId:
          type: string
        total:
          type: integer
      type: object
    Scanner:
      description: Scanner for Harness Artifact Registries
      properties:
        name:
          enum:
            - AQUA_TRIVY
            - GRYPE
          type: string
      type: object
    SectionType:
      description: refers to client setup section type
      discriminator:
        propertyName: type
      enum:
        - INLINE
        - TABS
      type: string
    Status:
      description: Indicates if the request was successful or not
      enum:
        - SUCCESS
        - FAILURE
        - ERROR
      type: string
    StorageDetails:
      description: storage details
      properties:
        totalSize:
          type: string
      required:
        - totalSize
      type: object
    TabSetupStep:
      description: Tab Setup step
      properties:
        header:
          type: string
        sections:
          items:
            $ref: '#/components/schemas/ClientSetupSection'
          type: array
      type: object
    TabSetupStepConfig:
      description: Tab Setup step config
      properties:
        tabs:
          items:
            $ref: '#/components/schemas/TabSetupStep'
          type: array
      type: object
    Trigger:
      description: refers to trigger
      enum:
        - ARTIFACT_CREATION
        - ARTIFACT_DELETION
      type: string
    UpstreamConfig:
      description: Configuration for Harness Artifact UpstreamProxies
      properties:
        auth:
          oneOf:
            - $ref: '#/components/schemas/UserPassword'
            - $ref: '#/components/schemas/Anonymous'
        authType:
          $ref: '#/components/schemas/AuthType'
        source:
          enum:
            - Dockerhub
            - Custom
          type: string
        url:
          type: string
      required:
        - authType
      type: object
      x-discriminator-value: UPSTREAM
    UserPassword:
      properties:
        secretIdentifier:
          type: string
        secretSpaceId:
          type: integer
        secretSpacePath:
          type: string
        userName:
          type: string
      required:
        - userName
        - password
    VirtualConfig:
      description: Configuration for Harness Virtual Artifact Registries
      properties:
        upstreamProxies:
          items:
            type: string
          type: array
      type: object
    Webhook:
      description: Harness Regstries Webhook
      properties:
        createdAt:
          type: string
        createdBy:
          format: int64
          type: integer
        description:
          type: string
        enabled:
          type: boolean
        extraHeaders:
          items:
            $ref: '#/components/schemas/ExtraHeader'
          type: array
        identifier:
          type: string
        insecure:
          type: boolean
        internal:
          type: boolean
        latestExecutionResult:
          $ref: '#/components/schemas/WebhookExecResult'
        modifiedAt:
          type: string
        name:
          type: string
        secretIdentifier:
          type: string
        secretSpaceId:
          format: int64
          type: integer
        secretSpacePath:
          type: string
        triggers:
          items:
            $ref: '#/components/schemas/Trigger'
          type: array
        url:
          type: string
        version:
          format: int64
          type: integer
      required:
        - identifier
        - url
        - name
        - enabled
        - insecure
      type: object
    WebhookExecRequest:
      description: Harness Regstries HTTP Webhook Request
      properties:
        body:
          type: string
        headers:
          type: string
        url:
          type: string
      type: object
    WebhookExecResponse:
      description: Harness Regstries HTTP Webhook Response
      properties:
        body:
          type: string
        headers:
          type: string
        status:
          type: string
        statusCode:
          type: integer
      type: object
    WebhookExecResult:
      description: refers to webhook execution
      enum:
        - SUCCESS
        - RETRIABLE_ERROR
        - FATAL_ERROR
      type: string
    WebhookExecution:
      description: Harness Regstries Webhook Execution
      properties:
        created:
          format: int64
          type: integer
        duration:
          format: int64
          type: integer
        error:
          type: string
        id:
          format: int64
          type: integer
        request:
          $ref: '#/components/schemas/WebhookExecRequest'
        response:
          $ref: '#/components/schemas/WebhookExecResponse'
        result:
          $ref: '#/components/schemas/WebhookExecResult'
        retriggerOf:
          format: int64
          type: integer
        retriggerable:
          type: boolean
        triggerType:
          $ref: '#/components/schemas/Trigger'
        webhookId:
          format: int64
          type: integer
      type: object
    WebhookRequest:
      properties:
        description:
          type: string
        enabled:
          type: boolean
        extraHeaders:
          items:
            $ref: '#/components/schemas/ExtraHeader'
          type: array
        identifier:
          type: string
        insecure:
          type: boolean
        name:
          type: string
        secretIdentifier:
          type: string
        secretSpaceId:
          format: int64
          type: integer
        secretSpacePath:
          type: string
        triggers:
          items:
            $ref: '#/components/schemas/Trigger'
          type: array
        url:
          type: string
      required:
        - insecure
        - enabled
        - identifier
        - url
        - name
      type: object
info:
  contact:
    name: Harness Artifact Registry - developers
    url: https://www.harness.io
  title: Harness Artifact Registry API
  version: 1.0.0
openapi: 3.0.0
paths:
  /registry:
    post:
      description: Create a Registry.
      operationId: CreateRegistry
      parameters:
        - $ref: '#/components/parameters/spaceRefQueryParam'
      requestBody:
        $ref: '#/components/requestBodies/RegistryRequest'
      responses:
        "201":
          $ref: '#/components/responses/RegistryResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Create Registry.
      tags:
        - Registries
  /registry/{registry_identifier}/artifact/{artifact}/+/redirect:
    get:
      description: Redirect to Harness Artifact Page
      operationId: RedirectHarnessArtifact
      parameters:
        - $ref: '#/components/parameters/RegistryIdentifierPathParam'
        - $ref: '#/components/parameters/AccountIdentifierParam'
        - $ref: '#/components/parameters/artifactPathParam'
        - $ref: '#/components/parameters/versionParam'
      responses:
        "302":
          $ref: '#/components/responses/Redirect'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Redirect to Harness Artifact Page
      tags:
        - Artifacts
  /registry/{registry_ref}/+:
    delete:
      description: Delete a Registry in the account for the given key
      operationId: DeleteRegistry
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Delete a Registry
      tags:
        - Registries
    get:
      description: Returns Registry Details in the account for the given key
      operationId: GetRegistry
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
      responses:
        "200":
          $ref: '#/components/responses/RegistryResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Returns Registry Details
      tags:
        - Registries
    put:
      description: Updates a Registry in the account for the given key
      operationId: ModifyRegistry
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
      requestBody:
        $ref: '#/components/requestBodies/RegistryRequest'
      responses:
        "200":
          $ref: '#/components/responses/RegistryResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Updates a Registry
      tags:
        - Registries
  /registry/{registry_ref}/+/artifact/{artifact}/+:
    delete:
      description: Delete Artifact.
      operationId: DeleteArtifact
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/artifactPathParam'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Delete Artifact
      tags:
        - Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/labels:
    put:
      description: Update Artifact Labels.
      operationId: UpdateArtifactLabels
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/artifactPathParam'
      requestBody:
        $ref: '#/components/requestBodies/ArtifactLabelRequest'
      responses:
        "200":
          $ref: '#/components/responses/ArtifactLabelResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Update Artifact Labels
      tags:
        - Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/stats:
    get:
      description: Get Artifact Stats.
      operationId: GetArtifactStats
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/artifactPathParam'
        - $ref: '#/components/parameters/fromDateParam'
        - $ref: '#/components/parameters/toDateParam'
      responses:
        "200":
          $ref: '#/components/responses/ArtifactStatsResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Get Artifact Stats
      tags:
        - Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/summary:
    get:
      description: Get Artifact Summary.
      operationId: GetArtifactSummary
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/artifactPathParam'
      responses:
        "200":
          $ref: '#/components/responses/ArtifactSummaryResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Get Artifact Summary
      tags:
        - Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}:
    delete:
      description: Delete Artifact Version.
      operationId: DeleteArtifactVersion
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/artifactPathParam'
        - $ref: '#/components/parameters/versionPathParam'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Delete an Artifact Version
      tags:
        - Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/deploymentdetails:
    get:
      description: Get Artifact Deployments
      operationId: GetArtifactDeployments
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/artifactPathParam'
        - $ref: '#/components/parameters/versionPathParam'
        - $ref: '#/components/parameters/envType'
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/sortOrder'
        - $ref: '#/components/parameters/sortField'
        - $ref: '#/components/parameters/searchTerm'
      responses:
        "200":
          $ref: '#/components/responses/ArtifactDeploymentsResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Describe Artifact Deployments
      tags:
        - Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/details:
    get:
      description: Get Artifact Details
      operationId: GetArtifactDetails
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/artifactPathParam'
        - $ref: '#/components/parameters/versionPathParam'
        - $ref: '#/components/parameters/childVersionParam'
      responses:
        "200":
          $ref: '#/components/responses/ArtifactDetailResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Describe Artifact Details
      tags:
        - Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/docker/details:
    get:
      description: Get Docker Artifact Details
      operationId: GetDockerArtifactDetails
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/artifactPathParam'
        - $ref: '#/components/parameters/versionPathParam'
        - $ref: '#/components/parameters/digestParam'
      responses:
        "200":
          $ref: '#/components/responses/DockerArtifactDetailResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Describe Docker Artifact Detail
      tags:
        - Docker Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/docker/integrationdetails:
    get:
      description: Get Docker Artifact Integration Details
      operationId: GetDockerArtifactIntegrationDetails
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/artifactPathParam'
        - $ref: '#/components/parameters/versionPathParam'
        - $ref: '#/components/parameters/digestParam'
      responses:
        "200":
          $ref: '#/components/responses/DockerArtifactDetailIntegrationResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Describe Docker Artifact Integration Detail
      tags:
        - Docker Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/docker/layers:
    get:
      description: Get Docker Artifact Layers
      operationId: GetDockerArtifactLayers
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/artifactPathParam'
        - $ref: '#/components/parameters/versionPathParam'
        - $ref: '#/components/parameters/digestParam'
      responses:
        "200":
          $ref: '#/components/responses/DockerLayersResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Describe Docker Artifact Layers
      tags:
        - Docker Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/docker/manifest:
    get:
      description: Get Docker Artifact Manifest
      operationId: GetDockerArtifactManifest
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/artifactPathParam'
        - $ref: '#/components/parameters/versionPathParam'
        - $ref: '#/components/parameters/digestParam'
      responses:
        "200":
          $ref: '#/components/responses/DockerArtifactManifestResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Describe Docker Artifact Manifest
      tags:
        - Docker Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/docker/manifests:
    get:
      description: Get Docker Artifact Manifests
      operationId: GetDockerArtifactManifests
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/artifactPathParam'
        - $ref: '#/components/parameters/versionPathParam'
      responses:
        "200":
          $ref: '#/components/responses/DockerManifestsResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Describe Docker Artifact Manifests
      tags:
        - Docker Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/files:
    get:
      description: Get Artifact files
      operationId: GetArtifactFiles
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/artifactPathParam'
        - $ref: '#/components/parameters/versionPathParam'
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/sortOrder'
        - $ref: '#/components/parameters/sortField'
        - $ref: '#/components/parameters/searchTerm'
      responses:
        "200":
          $ref: '#/components/responses/FileDetailResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Describe Artifact files
      tags:
        - Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/helm/details:
    get:
      description: Get Helm Artifact Details
      operationId: GetHelmArtifactDetails
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/artifactPathParam'
        - $ref: '#/components/parameters/versionPathParam'
      responses:
        "200":
          $ref: '#/components/responses/HelmArtifactDetailResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Describe Helm Artifact Detail
      tags:
        - Helm Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/helm/manifest:
    get:
      description: Get Helm Artifact Manifest
      operationId: GetHelmArtifactManifest
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/artifactPathParam'
        - $ref: '#/components/parameters/versionPathParam'
      responses:
        "200":
          $ref: '#/components/responses/HelmArtifactManifestResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Describe Helm Artifact Manifest
      tags:
        - Helm Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/summary:
    get:
      description: Get Artifact Version Summary.
      operationId: GetArtifactVersionSummary
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/artifactPathParam'
        - $ref: '#/components/parameters/versionPathParam'
        - $ref: '#/components/parameters/digestOptParam'
      responses:
        "200":
          $ref: '#/components/responses/ArtifactVersionSummaryResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Get Artifact Version Summary
      tags:
        - Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/versions:
    get:
      description: Lists all the Artifact Versions.
      operationId: GetAllArtifactVersions
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/artifactPathParam'
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/sortOrder'
        - $ref: '#/components/parameters/sortField'
        - $ref: '#/components/parameters/searchTerm'
      responses:
        "200":
          $ref: '#/components/responses/ListArtifactVersionResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: List Artifact Versions
      tags:
        - Artifacts
  /registry/{registry_ref}/+/artifact/labels:
    get:
      description: List Artifact Labels.
      operationId: ListArtifactLabels
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/searchTerm'
      responses:
        "200":
          $ref: '#/components/responses/ListArtifactLabelResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: List Artifact Labels
      tags:
        - Artifacts
  /registry/{registry_ref}/+/artifact/stats:
    get:
      description: Get Artifact Stats.
      operationId: GetArtifactStatsForRegistry
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/fromDateParam'
        - $ref: '#/components/parameters/toDateParam'
      responses:
        "200":
          $ref: '#/components/responses/ArtifactStatsResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Get Artifact Stats
      tags:
        - Artifacts
  /registry/{registry_ref}/+/artifacts:
    get:
      description: Lists all the Artifacts for Registry
      operationId: GetAllArtifactsByRegistry
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/LabelsParam'
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/sortOrder'
        - $ref: '#/components/parameters/sortField'
        - $ref: '#/components/parameters/searchTerm'
      responses:
        "200":
          $ref: '#/components/responses/ListRegistryArtifactResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: List Artifacts for Registry
      tags:
        - Registries
  /registry/{registry_ref}/+/client-setup-details:
    get:
      description: Returns CLI Client Setup Details based on package type
      operationId: GetClientSetupDetails
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/artifactParam'
        - $ref: '#/components/parameters/versionParam'
      responses:
        "200":
          $ref: '#/components/responses/ClientSetupDetailsResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Returns CLI Client Setup Details
      tags:
        - Registries
  /registry/{registry_ref}/+/webhooks:
    get:
      description: Returns List of Webhook Details
      operationId: ListWebhooks
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/sortOrder'
        - $ref: '#/components/parameters/sortField'
        - $ref: '#/components/parameters/searchTerm'
      responses:
        "200":
          $ref: '#/components/responses/ListWebhooksResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: ListWebhooks
      tags:
        - Webhooks
    post:
      description: Returns Webhook Details
      operationId: CreateWebhook
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
      requestBody:
        $ref: '#/components/requestBodies/WebhookRequest'
      responses:
        "201":
          $ref: '#/components/responses/WebhookResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: CreateWebhook
      tags:
        - Webhooks
  /registry/{registry_ref}/+/webhooks/{webhook_identifier}:
    delete:
      description: Delete a Webhook
      operationId: DeleteWebhook
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/webhookIdentifierPathParam'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: DeleteWebhook
      tags:
        - Webhooks
    get:
      description: Returns Webhook Details
      operationId: GetWebhook
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/webhookIdentifierPathParam'
      responses:
        "200":
          $ref: '#/components/responses/WebhookResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: GetWebhook
      tags:
        - Webhooks
    put:
      description: Returns Webhook Details
      operationId: UpdateWebhook
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/webhookIdentifierPathParam'
      requestBody:
        $ref: '#/components/requestBodies/WebhookRequest'
      responses:
        "201":
          $ref: '#/components/responses/WebhookResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: UpdateWebhook
      tags:
        - Webhooks
  /registry/{registry_ref}/+/webhooks/{webhook_identifier}/executions:
    get:
      description: Returns Webhook Execution Details List
      operationId: ListWebhookExecutions
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/webhookIdentifierPathParam'
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
      responses:
        "200":
          $ref: '#/components/responses/ListWebhooksExecutionResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: ListWebhookExecutions
      tags:
        - Webhooks
  /registry/{registry_ref}/+/webhooks/{webhook_identifier}/executions/{webhook_execution_id}:
    get:
      description: Returns Webhook Execution Details
      operationId: GetWebhookExecution
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/webhookIdentifierPathParam'
        - $ref: '#/components/parameters/webhookExecutionIdPathParam'
      responses:
        "200":
          $ref: '#/components/responses/WebhookExecutionResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: GetWebhookExecution
      tags:
        - Webhooks
  /registry/{registry_ref}/+/webhooks/{webhook_identifier}/executions/{webhook_execution_id}/retrigger:
    get:
      description: Retrigger Webhook Execution
      operationId: ReTriggerWebhookExecution
      parameters:
        - $ref: '#/components/parameters/registryRefPathParam'
        - $ref: '#/components/parameters/webhookIdentifierPathParam'
        - $ref: '#/components/parameters/webhookExecutionIdPathParam'
      responses:
        "200":
          $ref: '#/components/responses/WebhookExecutionResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: ReTriggerWebhookExecution
      tags:
        - Webhooks
  /replication/rules:
    get:
      description: List all replication rules
      operationId: listReplicationRules
      parameters:
        - $ref: '#/components/parameters/spaceRefQueryParam'
      responses:
        "200":
          $ref: '#/components/responses/ListReplicationRuleResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: List replication rules
      tags:
        - Replication
    post:
      description: Create a replication rule
      operationId: createReplicationRule
      parameters:
        - $ref: '#/components/parameters/spaceRefQueryParam'
      requestBody:
        $ref: '#/components/requestBodies/ReplicationRuleRequest'
      responses:
        "200":
          $ref: '#/components/responses/ReplicationRuleResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Create a replication rule
      tags:
        - Replication
  /replication/rules/{id}:
    delete:
      description: Delete a replication rule
      operationId: deleteReplicationRule
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Delete a replication rule
      tags:
        - Replication
    get:
      description: Get a replication rule
      operationId: getReplicationRule
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/ReplicationRuleResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Get a replication rule
      tags:
        - Replication
    put:
      description: Update a replication rule
      operationId: updateReplicationRule
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/ReplicationRuleRequest'
      responses:
        "200":
          $ref: '#/components/responses/ReplicationRuleResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Update a replication rule
      tags:
        - Replication
  /replication/rules/{id}/migration/images:
    get:
      description: List migration images given an id
      operationId: listMigrationImages
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/sortOrder'
        - $ref: '#/components/parameters/sortField'
      responses:
        "200":
          $ref: '#/components/responses/ListMigrationImageResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: List migration images
      tags:
        - Replication
  /replication/rules/{id}/migration/images/{image_id}/logs:
    get:
      operationId: getMigrationLogsForImage
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: image_id
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/PlainTextResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Get migration logs for an image
      tags:
        - Replication
  /replication/rules/{id}/migration/start:
    post:
      description: Start migration given an id
      operationId: startMigration
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Start migration
      tags:
        - Replication
  /replication/rules/{id}/migration/stop:
    post:
      description: Stop migration given an id
      operationId: stopMigration
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Stop migration
      tags:
        - Replication
  /spaces/{space_ref}/+/artifact/stats:
    get:
      description: Get artifact stats
      operationId: GetArtifactStatsForSpace
      parameters:
        - $ref: '#/components/parameters/spaceRefPathParam'
        - $ref: '#/components/parameters/fromDateParam'
        - $ref: '#/components/parameters/toDateParam'
      responses:
        "200":
          $ref: '#/components/responses/ArtifactStatsResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Get artifact stats
      tags:
        - Spaces
  /spaces/{space_ref}/+/artifacts:
    get:
      description: Lists all the Harness Artifacts.
      operationId: GetAllHarnessArtifacts
      parameters:
        - $ref: '#/components/parameters/spaceRefPathParam'
        - $ref: '#/components/parameters/RegistryIdentifierParam'
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/sortOrder'
        - $ref: '#/components/parameters/sortField'
        - $ref: '#/components/parameters/searchTerm'
        - $ref: '#/components/parameters/latestVersion'
        - $ref: '#/components/parameters/deployedArtifact'
        - $ref: '#/components/parameters/packageTypeParam'
      responses:
        "200":
          $ref: '#/components/responses/ListArtifactResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: List Harness Artifacts
      tags:
        - Spaces
  /spaces/{space_ref}/+/details:
    get:
      description: Get storage details for given space
      operationId: GetStorageDetails
      parameters:
        - $ref: '#/components/parameters/spaceRefPathParam'
      responses:
        "200":
          $ref: '#/components/responses/StorageDetailsResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: Get storage details for given space
      tags:
        - Spaces
  /spaces/{space_ref}/+/registries:
    get:
      description: Lists all the registries.
      operationId: GetAllRegistries
      parameters:
        - $ref: '#/components/parameters/spaceRefPathParam'
        - $ref: '#/components/parameters/packageTypeParam'
        - $ref: '#/components/parameters/RegistryTypeParam'
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/sortOrder'
        - $ref: '#/components/parameters/sortField'
        - $ref: '#/components/parameters/searchTerm'
        - $ref: '#/components/parameters/recursiveParam'
      responses:
        "200":
          $ref: '#/components/responses/ListRegistryResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthenticated'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: List registries
      tags:
        - Spaces
servers:
  - description: Registry
    url: /api/v1
tags:
  - description: APIs to create, update, list registries
    name: Registries
  - description: APIs to get, list artifacts
    name: Artifacts
  - description: APIs to get details of docker artifacts
    name: Docker Artifacts
  - description: APIs to get details of helm artifacts
    name: Helm Artifacts
  - description: APIs to create, update, list webhooks
    name: Webhooks